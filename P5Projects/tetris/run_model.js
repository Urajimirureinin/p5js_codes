// 必要なモジュールをインポート
const fs = require('fs');
const brain = require('brain.js');

// 学習済みモデルのパス
const modelPath = './trained-model.json';

// モデルをロード
let trainedModel;
try {
    const rawModelData = fs.readFileSync(modelPath, 'utf8');
    trainedModel = JSON.parse(rawModelData);
} catch (error) {
    console.error('Error loading trained model:', error);
    process.exit(1);
}

// ニューラルネットワークを再構築
const net = new brain.NeuralNetwork();
net.fromJSON(trainedModel);

// 予測する入力データ
const input = {
    "(0,0)": 0,
    "(0,1)": 0,
    "(0,2)": 0,
    "(0,3)": 0,
    "(0,4)": 0,
    "(0,5)": 0,
    "(0,6)": 0,
    "(0,7)": 0,
    "(0,8)": 0,
    "(0,9)": 0,
    "(0,10)": 0,
    "(0,11)": 0,
    "(0,12)": 0,
    "(0,13)": 1,
    "(0,14)": 1,
    "(0,15)": 1,
    "(0,16)": 1,
    "(0,17)": 1,
    "(0,18)": 1,
    "(0,19)": 1,
    "(1,0)": 0,
    "(1,1)": 0,
    "(1,2)": 0,
    "(1,3)": 0,
    "(1,4)": 0,
    "(1,5)": 0,
    "(1,6)": 1,
    "(1,7)": 1,
    "(1,8)": 1,
    "(1,9)": 1,
    "(1,10)": 1,
    "(1,11)": 1,
    "(1,12)": 1,
    "(1,13)": 1,
    "(1,14)": 1,
    "(1,15)": 1,
    "(1,16)": 1,
    "(1,17)": 1,
    "(1,18)": 1,
    "(1,19)": 1,
    "(2,0)": 0,
    "(2,1)": 0,
    "(2,2)": 1,
    "(2,3)": 0,
    "(2,4)": 1,
    "(2,5)": 1,
    "(2,6)": 1,
    "(2,7)": 0,
    "(2,8)": 0,
    "(2,9)": 1,
    "(2,10)": 1,
    "(2,11)": 1,
    "(2,12)": 0,
    "(2,13)": 1,
    "(2,14)": 1,
    "(2,15)": 1,
    "(2,16)": 1,
    "(2,17)": 1,
    "(2,18)": 1,
    "(2,19)": 1,
    "(3,0)": 0,
    "(3,1)": 1,
    "(3,2)": 1,
    "(3,3)": 1,
    "(3,4)": 0,
    "(3,5)": 1,
    "(3,6)": 1,
    "(3,7)": 1,
    "(3,8)": 1,
    "(3,9)": 1,
    "(3,10)": 1,
    "(3,11)": 1,
    "(3,12)": 1,
    "(3,13)": 0,
    "(3,14)": 0,
    "(3,15)": 1,
    "(3,16)": 1,
    "(3,17)": 1,
    "(3,18)": 0,
    "(3,19)": 0,
    "(4,0)": 1,
    "(4,1)": 1,
    "(4,2)": 1,
    "(4,3)": 1,
    "(4,4)": 0,
    "(4,5)": 0,
    "(4,6)": 1,
    "(4,7)": 1,
    "(4,8)": 1,
    "(4,9)": 1,
    "(4,10)": 1,
    "(4,11)": 1,
    "(4,12)": 1,
    "(4,13)": 1,
    "(4,14)": 1,
    "(4,15)": 0,
    "(4,16)": 1,
    "(4,17)": 1,
    "(4,18)": 1,
    "(4,19)": 1,
    "(5,0)": 1,
    "(5,1)": 0,
    "(5,2)": 1,
    "(5,3)": 1,
    "(5,4)": 1,
    "(5,5)": 1,
    "(5,6)": 1,
    "(5,7)": 1,
    "(5,8)": 0,
    "(5,9)": 1,
    "(5,10)": 1,
    "(5,11)": 1,
    "(5,12)": 1,
    "(5,13)": 1,
    "(5,14)": 1,
    "(5,15)": 1,
    "(5,16)": 1,
    "(5,17)": 1,
    "(5,18)": 1,
    "(5,19)": 1,
    "(6,0)": 0,
    "(6,1)": 0,
    "(6,2)": 0,
    "(6,3)": 0,
    "(6,4)": 0,
    "(6,5)": 0,
    "(6,6)": 0,
    "(6,7)": 0,
    "(6,8)": 1,
    "(6,9)": 1,
    "(6,10)": 1,
    "(6,11)": 1,
    "(6,12)": 1,
    "(6,13)": 1,
    "(6,14)": 1,
    "(6,15)": 1,
    "(6,16)": 0,
    "(6,17)": 1,
    "(6,18)": 1,
    "(6,19)": 1,
    "(7,0)": 0,
    "(7,1)": 0,
    "(7,2)": 0,
    "(7,3)": 0,
    "(7,4)": 1,
    "(7,5)": 1,
    "(7,6)": 1,
    "(7,7)": 1,
    "(7,8)": 1,
    "(7,9)": 1,
    "(7,10)": 1,
    "(7,11)": 1,
    "(7,12)": 0,
    "(7,13)": 1,
    "(7,14)": 0,
    "(7,15)": 1,
    "(7,16)": 0,
    "(7,17)": 0,
    "(7,18)": 0,
    "(7,19)": 1,
    "(8,0)": 0,
    "(8,1)": 0,
    "(8,2)": 0,
    "(8,3)": 1,
    "(8,4)": 1,
    "(8,5)": 1,
    "(8,6)": 1,
    "(8,7)": 1,
    "(8,8)": 1,
    "(8,9)": 1,
    "(8,10)": 1,
    "(8,11)": 1,
    "(8,12)": 1,
    "(8,13)": 1,
    "(8,14)": 0,
    "(8,15)": 1,
    "(8,16)": 1,
    "(8,17)": 1,
    "(8,18)": 1,
    "(8,19)": 1,
    "(9,0)": 0,
    "(9,1)": 0,
    "(9,2)": 0,
    "(9,3)": 1,
    "(9,4)": 1,
    "(9,5)": 1,
    "(9,6)": 0,
    "(9,7)": 0,
    "(9,8)": 1,
    "(9,9)": 1,
    "(9,10)": 0,
    "(9,11)": 0,
    "(9,12)": 0,
    "(9,13)": 1,
    "(9,14)": 1,
    "(9,15)": 1,
    "(9,16)": 1,
    "(9,17)": 1,
    "(9,18)": 1,
    "(9,19)": 1,
    "mino": 3
  }; // 入力データを設定

// 予測
const output = net.run(input);

console.log('Input:', input);
console.log('Predicted Output:', output);
